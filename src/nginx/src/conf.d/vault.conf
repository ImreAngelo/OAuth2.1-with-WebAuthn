upstream hashicorp-vault {
    server vault:8200;
}

server {
    server_name vault.site.localhost;

    # Reserve QUIC for the login page
    listen 443 ssl;
    listen [::]:443 ssl;

    # http3 on;
    http2 on;
    
    # TLS certificates
    ssl_certificate     /etc/nginx/certs/ecdsa.crt;
    ssl_certificate_key /etc/nginx/certs/ecdsa.key;

    ssl_certificate     /etc/nginx/certs/rsa.crt;
    ssl_certificate_key /etc/nginx/certs/rsa.key;

    # HSTS (ngx_http_headers_module is required)
    add_header Strict-Transport-Security "max-age=63072000" always;

    # QUIC
	add_header Alt-Svc 'h3=":443"; ma=86400';
	quic_retry on;
	ssl_early_data on;
	quic_gso on;

    # Gzip compression (static and dynamic)
	gzip_static on;
	gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
	gzip_proxied any;
	gzip_vary on;
	gzip_buffers 16 8k;
	gzip_http_version 1.1;

	# Brotli compression (static and dynamic)
	brotli_static on;
	brotli_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    location / {
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
		proxy_pass http://hashicorp-vault/;

		proxy_cache off;
		proxy_intercept_errors on;
    }
    
    # TODO: In production, only allow access via cloudflared zero trust or VPN-like service
    # include cloudflare.conf;
    
	# Redirect to ui
	error_page 400 403 404 =302 /;
}